openapi: 3.0.0
info:
  title: Tshirt Store API
  description: E commerce web to run tshirt store
  version: 1.1.0
  contact:
    email: jadiyaskj@gmail.com
    url: 'stjapps.in'
# servers:
#   - url: "https://localhost:4000/api/v1"
#     description: for local host - secured
#   - url: "http://localhost:4000/api/v1"
#     description: for local host -  regular
servers:
  - url: '{protocol}://localhost:4000/api/{version}'
    description: for local host
    variables:
      protocol:
        default: http
        enum:
          - http
          - https
      version:
        default: v1
        enum:
          - v1
          - v2
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
    BearerAuth:
      type: http
      scheme: bearer

paths:
  /signup:
    post:
      tags:
        - User
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - email
                - password
                - photo
              properties:
                name:
                  type: string
                  required: true
                email:
                  type: string
                  required: true
                password:
                  type: string
                  required: true
                photo:
                  in: formData
                  type: file
                  format: binary
                  required: true
      summary: signup a new user. required files are - name, email, password and photo
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                      photo:
                        type: object
                        properties:
                          id:
                            type: string
                          secure_url:
                            type: string
                      createdAt:
                        type: string
                      _id:
                        type: string
                example:
                  {
                    'success': true,
                    'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxYjllYjIwYjZkODlhYTU3NzUzZWY0YSIsImVtYWlsIjoidGVzdDEyM0BnbWFpbC5jb20iLCJpYXQiOjE2Mzk1NzQzMDQsImV4cCI6MTYzOTgzMzUwNH0.2Y4wn1B_yWTqZLEBq4xgdF35HLHdm8QgQz1DNSCr8r4',
                    'user':
                      {
                        'name': 'test123',
                        'email': 'test123@gmail.com',
                        'role': 'user',
                        'photo':
                          {
                            'id': 'users/cgclnnfhi78urpvmqjna',
                            'secure_url': 'https://res.cloudinary.com/stj11bitd/image/upload/v1639574304/users/cgclnnfhi78urpvmqjna.png',
                          },
                        'createdAt': '2021-12-15T13:17:03.448Z',
                        '_id': '61b9eb20b6d89aa57753ef4a',
                        '__v': 0,
                      },
                  }
        400:
          description: bad request
        500:
          description: Internal Server Error
  /login:
    post:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  required: true
                password:
                  type: string
                  required: true
      summary: login section for any registered user
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                      photo:
                        type: object
                        properties:
                          id:
                            type: string
                          secure_url:
                            type: string
                      createdAt:
                        type: string
                      _id:
                        type: string
                example:
                  {
                    'success': true,
                    'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxYjllYjIwYjZkODlhYTU3NzUzZWY0YSIsImVtYWlsIjoidGVzdDEyM0BnbWFpbC5jb20iLCJpYXQiOjE2Mzk1NzQzMDQsImV4cCI6MTYzOTgzMzUwNH0.2Y4wn1B_yWTqZLEBq4xgdF35HLHdm8QgQz1DNSCr8r4',
                    'user':
                      {
                        'name': 'test123',
                        'email': 'test123@gmail.com',
                        'role': 'user',
                        'photo':
                          {
                            'id': 'users/cgclnnfhi78urpvmqjna',
                            'secure_url': 'https://res.cloudinary.com/stj11bitd/image/upload/v1639574304/users/cgclnnfhi78urpvmqjna.png',
                          },
                        'createdAt': '2021-12-15T13:17:03.448Z',
                        '_id': '61b9eb20b6d89aa57753ef4a',
                        '__v': 0,
                      },
                  }
        400:
          description: bad request
        500:
          description: Internal Server Error
  /logout:
    get:
      tags:
        - User
      parameters:
        - in: header
          name: cookie
      summary: logout route for any registered user
      responses:
        200:
          description: success
        404:
          description: Not Found
        400:
          description: bad request
        500:
          description: Internal Server Error
  /forgotPassword:
    post:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      example: { 'email': 'jadiyaskj@gmail.com' }
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        404:
          description: Not Found
        400:
          description: bad request
        500:
          description: Internal Server Error
